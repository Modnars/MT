// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: demo_service.proto

#ifndef PROTOBUF_demo_5fservice_2eproto__INCLUDED
#define PROTOBUF_demo_5fservice_2eproto__INCLUDED

#include <string>
#include "mt/task.h"

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/service.h>
#include "demo.pb.h"
// @@protoc_insertion_point(includes)

namespace protocol {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_demo_5fservice_2eproto();
void protobuf_AssignDesc_demo_5fservice_2eproto();
void protobuf_ShutdownFile_demo_5fservice_2eproto();

// ===================================================================

// ===================================================================

class DemoService_Stub;

class DemoService : public ::google::protobuf::Service {
protected:
    // This class should be treated as an abstract interface.
    inline DemoService(){};

public:
    virtual ~DemoService();

    typedef DemoService_Stub Stub;

    static const ::google::protobuf::ServiceDescriptor *descriptor();

    virtual void Echo(::google::protobuf::RpcController *controller, const ::protocol::EchoReq *request,
                      ::protocol::EchoRsp *response, ::google::protobuf::Closure *done);

    virtual mt::Task<int> Echo(::google::protobuf::RpcController *controller, const ::protocol::EchoReq &req,
                               ::protocol::EchoRsp &rsp, ::google::protobuf::Closure *done);

    // implements Service ----------------------------------------------

    const ::google::protobuf::ServiceDescriptor *GetDescriptor();
    void CallMethod(const ::google::protobuf::MethodDescriptor *method, ::google::protobuf::RpcController *controller,
                    const ::google::protobuf::Message *request, ::google::protobuf::Message *response,
                    ::google::protobuf::Closure *done);
    mt::Task<int> CallMethod(const ::google::protobuf::MethodDescriptor *method,
                             ::google::protobuf::RpcController *controller, const ::google::protobuf::Message &request,
                             ::google::protobuf::Message &response, ::google::protobuf::Closure *done);
    const ::google::protobuf::Message &GetRequestPrototype(const ::google::protobuf::MethodDescriptor *method) const;
    const ::google::protobuf::Message &GetResponsePrototype(const ::google::protobuf::MethodDescriptor *method) const;

private:
    GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(DemoService);
};

class DemoService_Stub : public DemoService {
public:
    DemoService_Stub(::google::protobuf::RpcChannel *channel);
    DemoService_Stub(::google::protobuf::RpcChannel *channel, ::google::protobuf::Service::ChannelOwnership ownership);
    ~DemoService_Stub();

    inline ::google::protobuf::RpcChannel *channel() { return channel_; }

    // implements DemoService ------------------------------------------

    void Echo(::google::protobuf::RpcController *controller, const ::protocol::EchoReq *request,
              ::protocol::EchoRsp *response, ::google::protobuf::Closure *done);

private:
    ::google::protobuf::RpcChannel *channel_;
    bool owns_channel_;
    GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(DemoService_Stub);
};

// ===================================================================

// ===================================================================

// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol

#ifndef SWIG
namespace google {
namespace protobuf { }  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_demo_5fservice_2eproto__INCLUDED
